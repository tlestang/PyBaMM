name: PyBaMM

on:
  push:
    
  pull_request:

  # everyday at 3 am UTC
  schedule:
    - cron:  '0 3 * * *'

jobs:
  
  style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Check style
      run: |
        python -m pip install tox
        tox -e flake8

  build:
    needs: style
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
  
    - name: Set up Julia 1.5
      uses: julia-actions/setup-julia@v1
      with:
        version: 1.5
    
    - name: Install Linux system dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt install gfortran gcc libopenblas-dev graphviz
        sudo apt install python${{ matrix.python-version }}.dev
    
    - name: Install MacOS system dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install graphviz
        brew install openblas
        
    - name: Install Windows system dependencies
      if: matrix.os == 'windows-latest'
      run: choco install graphviz --version=2.38.0.20190211
    
    - name: Install standard python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install tox

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3

    - name: Install SuiteSparse and Sundials
      if: matrix.os != 'windows-latest'
      run: tox -e pybamm-requires

    - name: Run unit tests for GNU/Linux and MacOS
      if: matrix.os != 'windows-latest'
      run: python -m tox -e tests-julia-scikits.odes

    - name: Run unit tests for Windows
      if: matrix.os == 'windows-latest'
      run: python -m tox -e windows-tests-julia

    - name: Install docs dependencies and run doctests
      if: matrix.os != 'windows-latest'
      run: tox -e doctests
    
    - name: Install dev dependencies and run example tests
      if: matrix.os != 'windows-latest'
      run: tox -e examples
        
    - name: Install and run coverage
      if: success() && (matrix.os == 'ubuntu-latest' && matrix.python-version == 3.7)
      run: tox -e coverage

    - name: Upload coverage report
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.7
      uses: codecov/codecov-action@v1

